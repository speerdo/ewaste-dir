---
import type { RecyclingCenter } from '../types/supabase';
import { getRecyclingCentersByState } from '../lib/supabase';
import type { CentersByCity } from '../lib/supabase';

type Props = {
  state: string;
};

const { state } = Astro.props;
const centersByCity: CentersByCity = await getRecyclingCentersByState(state);
const cities = Object.keys(centersByCity).sort();
---

<!-- City Quick Nav -->
<div class="bg-gray-50 border-b border-gray-200 sticky top-16 z-40">
  <div class="container mx-auto px-4 py-4">
    <div class="flex items-center space-x-4 overflow-x-auto">
      <span class="text-gray-600 font-medium whitespace-nowrap">Quick Jump:</span>
      {cities.map((city) => (
        <a 
          href={`#${city.toLowerCase().replace(/\s+/g, '-')}`} 
          class="px-4 py-2 bg-white hover:bg-green-50 text-gray-700 hover:text-green-700 rounded-full transition-colors whitespace-nowrap shadow-sm"
        >
          {city}
        </a>
      ))}
    </div>
  </div>
</div>

<!-- Cities Content -->
<div class="container mx-auto px-4 py-12">
  <div class="space-y-16">
    {cities.map((city) => (
      <section id={city.toLowerCase().replace(/\s+/g, '-')} class="scroll-mt-32">
        <h2 class="text-3xl font-display font-bold text-gray-900 mb-8">{city}</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {centersByCity[city].map((center: RecyclingCenter) => (
            <div class="bg-white rounded-lg shadow-md overflow-hidden">
              <div class="p-6">
                <h3 class="text-xl font-bold text-gray-900 mb-2">{center.name}</h3>
                <div class="space-y-3 text-gray-600">
                  {center.full_address && (
                    <div class="flex items-start">
                      <svg class="h-6 w-6 text-gray-400 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                      </svg>
                      <span>{center.full_address}</span>
                    </div>
                  )}
                  {center.phone && (
                    <div class="flex items-center">
                      <svg class="h-6 w-6 text-gray-400 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                      </svg>
                      <span>{center.phone}</span>
                    </div>
                  )}
                  {center.site && (
                    <div class="flex items-center">
                      <svg class="h-6 w-6 text-gray-400 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9" />
                      </svg>
                      <a href={center.site} target="_blank" rel="noopener noreferrer" class="text-green-600 hover:text-green-700">
                        Visit Website
                      </a>
                    </div>
                  )}
                </div>
              </div>
            </div>
          ))}
        </div>
      </section>
    ))}
  </div>
</div> 

---
import type { RecyclingCenter } from '../../types/supabase';


interface Props {
  center: RecyclingCenter;
  defaultLogo: string;
}

const { center, defaultLogo } = Astro.props;

// Format working hours for display
function formatWorkingHours(hours: any): string {
  if (!hours) return 'Hours not available';
  if (typeof hours === 'string') {
    if (hours === '24/7') return 'Open 24/7';
    return hours;
  }
  
  try {
    let parsed = hours;
    if (typeof hours === 'string') {
      parsed = JSON.parse(hours);
    }
    
    const daysOrder = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];
    return Object.entries(parsed)
      .sort(([a], [b]) => daysOrder.indexOf(a) - daysOrder.indexOf(b))
      .map(([day, time]) => `${day}: ${time}`)
      .join('\n');
  } catch (error) {
    console.error('Error parsing hours:', error);
    return hours.toString();
  }
}
---

<div 
  id={`center-${center.id}`}
  class="bg-white rounded-xl shadow-md overflow-hidden hover:shadow-lg transition-all duration-300 cursor-pointer" 
  data-center-id={center.id}
  data-rating={center.rating ? Number(center.rating).toFixed(1) : "0"}
  data-name={center.name}
  data-lat={center.latitude}
  data-lng={center.longitude}
  onclick={`
    // Remove highlight from all centers
    document.querySelectorAll('[data-center-id]').forEach(el => el.classList.remove('highlight-center'));
    // Add highlight to this center
    this.classList.add('highlight-center');
    // Dispatch event for map marker
    window.dispatchEvent(new CustomEvent('markerClick', { detail: { centerId: '${center.id}' }}));
  `}
>
  <div class="p-6">
    <div class="flex items-start justify-between">
      <div class="flex-grow">
        <h3 class="text-xl font-semibold text-gray-900 mb-2">
          {center.name}
        </h3>
        {center.rating && (
          <div class="flex items-center mb-2">
            {Array.from({ length: Math.round(Number(center.rating)) }).map(() => (
              <svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
              </svg>
            ))}
            <span class="ml-2 text-gray-600">
              {Number(center.rating).toFixed(1)} ({center.reviews || 0} reviews)
            </span>
          </div>
        )}
      </div>
      <div class="flex-shrink-0 ml-4">
        {center.logo ? (
          <img 
            src={center.logo}
            alt=""
            loading="lazy"
            class="w-16 h-16 object-contain rounded-lg bg-gray-50"
            onerror={`this.onerror=null; this.src='${defaultLogo}';`}
          />
        ) : (
          <div class="w-16 h-16 rounded-lg bg-gray-100 flex items-center justify-center">
            <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
            </svg>
          </div>
        )}
      </div>
    </div>

    <div class="mt-4 space-y-3">
      <div class="flex items-start">
        <svg class="w-6 h-6 text-gray-400 mr-3 mt-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
        </svg>
        <address class="not-italic text-gray-600">
          {center.full_address}
        </address>
      </div>

      {center.phone && (
        <div class="flex items-center">
          <svg class="w-6 h-6 text-gray-400 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
          </svg>
          <a href={`tel:${center.phone}`} class="text-green-600 hover:text-green-700">
            {center.phone}
          </a>
        </div>
      )}

      {center.site && (
        <div class="flex items-center">
          <svg class="w-6 h-6 text-gray-400 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9" />
          </svg>
          <a href={center.site} target="_blank" rel="noopener noreferrer" class="text-green-600 hover:text-green-700">
            Visit Website
          </a>
        </div>
      )}

      {center.description && (
        <div class="flex items-start">
          <svg class="w-6 h-6 text-gray-400 mr-3 mt-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <p class="text-gray-600">{center.description}</p>
        </div>
      )}

      {center.working_hours && (
        <div class="flex items-start">
          <svg class="w-6 h-6 text-gray-400 mr-3 mt-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <div class="text-gray-600">
            <button 
              type="button"
              class="hours-toggle flex items-center gap-2 hover:text-green-600 transition-colors"
              onclick="this.setAttribute('aria-expanded', this.getAttribute('aria-expanded') === 'true' ? 'false' : 'true'); document.getElementById(this.getAttribute('aria-controls')).style.display = this.getAttribute('aria-expanded') === 'true' ? 'block' : 'none'; this.querySelector('svg').classList.toggle('rotate-180')"
              aria-expanded="false"
              aria-controls={`hours-${center.id}`}
              data-hours-toggle
            >
              <span>Opening Hours</span>
              <svg class="w-4 h-4 transform transition-transform duration-200" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
              </svg>
            </button>
            <div 
              id={`hours-${center.id}`}
              class="mt-2 space-y-1"
              style="display: none;"
            >
              {formatWorkingHours(center.working_hours).split('\n').map(line => {
                const [day, time] = line.split(': ');
                return (
                  <div class="flex justify-between py-1">
                    <span class="font-medium text-gray-700">{day}</span>
                    <span class="text-gray-600">{time}</span>
                  </div>
                );
              })}
            </div>
          </div>
        </div>
      )}
    </div>

    <div class="mt-6 flex flex-wrap gap-4">
      {center.phone && (
        <a
          href={`tel:${center.phone}`}
          class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
        >
          Call Now
        </a>
      )}
      {center.site && (
        <a
          href={center.site}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md shadow-sm text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
        >
          Visit Website
        </a>
      )}
      <button
        onclick={`window.showDirections(${center.latitude}, ${center.longitude})`}
        class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md shadow-sm text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
      >
        Get Directions
      </button>
    </div>
  </div>
</div> 
